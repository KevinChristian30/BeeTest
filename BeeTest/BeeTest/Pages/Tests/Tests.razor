@page "/tests"
@layout AuthenticatedLayout

@using BeeTest.Authentication
@using BeeTest.Pages.Components
@using BeeTest.Models
@using BeeTest.Pages.Components.Gates
@using BeeTest.Services.Interfaces
@using MudBlazor

@inject NavigationManager navigationManager
@inject ITestService testService
@inject IJSRuntime js

<AdminOnlyGate/>

<PageTitle>BeeTest | Manage Tests</PageTitle>

<AuthorizeView>
    <Authorized>
        <PageHeader Text="Manage Tests" />
        @if (IsLoading)
        {
            <LoadingView />
        }
        else if (@tests.Count() == 0)
        {
            <h5>There Are No Tests</h5>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Size="Size.Large" OnClick="NavigateToAddTestPage" Style="@($"background-color:{Colors.Blue.Default}; color:{Colors.Grey.Lighten5}; border-radius: 2px;")">Add Test</MudButton>
        }
        else
        {
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Size="Size.Large" OnClick="NavigateToAddTestPage" Style="@($"background-color:{Colors.Blue.Default}; color:{Colors.Grey.Lighten5}; border-radius: 2px;")">Add Test</MudButton>

            <MudTable Items="@tests" Hover="true" Breakpoint="Breakpoint.Sm" Bordered="true" Dense="true"
                  Style="@($"background-color:{Colors.Grey.Lighten3}; border-radius: 7px; margin-top: 10px")">
                <HeaderContent>
                    <MudTh>Test Name</MudTh>
                    <MudTh>Test Passing Score</MudTh>
                    <MudTh>Action</MudTh>
                </HeaderContent>
                <RowTemplate Context="test">
                    <MudTd DataLabel="Test Name">@test.Name</MudTd>
                    <MudTd DataLabel="Test Passing Grade">@test.PassingScore</MudTd>
                    <MudTd DataLabel="Action">
                        <MudIconButton Variant="Variant.Filled" Style="@($"background-color:{Colors.Blue.Default}; color:{Colors.Grey.Lighten5};")" Icon="@Icons.Material.Filled.Edit" OnClick="@(() => NavigateToTestDetailPage(test.Id))"></MudIconButton>
                        <MudIconButton Variant="Variant.Filled" Style="@($"background-color:{Colors.Red.Default}; color:{Colors.Grey.Lighten5};")" Icon="@Icons.Material.Filled.Delete" OnClick="@(() => DeleteTest(@test))"></MudIconButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
    </Authorized>
</AuthorizeView>

@code {
    private bool IsLoading = false;
    private List<Test> tests = new List<Test>();

    protected override async Task OnInitializedAsync()
    {
        tests = await testService.GetAllTests();

        await base.OnInitializedAsync();
    }

    private void NavigateToAddTestPage()
    {
        navigationManager.NavigateTo("/tests/add", true);
    }

    private void NavigateToTestDetailPage(int id)
    {
        navigationManager.NavigateTo($"/tests/{id}", true);
    }

    private async Task DeleteTest(Test test)
    {
        IsLoading = true;

        bool isSucessful = await testService.Delete(test.Id);
        IsLoading = false;

        if (isSucessful) tests.Remove(test);
        else await js.InvokeVoidAsync("alert", "User Deletion Failed");
    }
}